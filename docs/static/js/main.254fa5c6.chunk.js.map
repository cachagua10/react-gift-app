{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAqCeA,EAlCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEnB,EAAoCC,mBAAU,IAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,MAKlB,SACI,uBACIO,KAAO,OACPC,MAAUT,EACVU,SAnBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,sCCNnBG,EAAQ,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEdC,EAAM,0CAA0CC,UAAWH,GAAW,qDAFxD,SAGDI,MAAOF,GAHN,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAabM,GAba,4CAAH,sDCaNO,EAZK,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAE7B,OACI,sBAAKc,UAAY,2DAAjB,UACI,6BAAMJ,IACN,qBAAKK,IAAQf,EAAMgB,IAAQN,QCqBxBO,EAzBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGf,ECHwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAE/BqB,KAAM,GACNa,SAAS,IAHb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAXAC,qBAAU,WACNxB,EAAUC,GACLwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAAEpB,IAEEqB,EDjBwBK,CAAc1B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACI,qBAAIJ,UAAW,sDAAf,cAAwEhB,EAAxE,OACEoB,GAAW,iDACb,qBAAKJ,UAAY,YAAjB,SAGYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAESA,GADGA,EAAIC,aEc7BgB,EA3BM,WAIjB,MAAoCzC,mBAAS,CAAC,gBAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAaA,GADLA,Y,MCdpC6B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.254fa5c6.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ( {setCategories} ) => {\r\n    \r\n    const [inputValue, setInputValue] = useState( '' );\r\n    \r\n    const handleInputChange = ( e ) =>{\r\n        setInputValue( e.target.value )\r\n\r\n    }\r\n\r\n    const handleSubmit = ( e ) =>{\r\n        e.preventDefault();\r\n        //console.log( 'Submit hecho lcdtm' );\r\n        if ( inputValue.trim().length > 2 ){\r\n            setCategories(cat=> [ inputValue, ...cat] );\r\n            setInputValue('');\r\n        }    \r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input \r\n                type = \"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n            />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","\r\n\r\nexport const getGifts = async ( category )=>{\r\n\r\n    const url = 'https://api.giphy.com/v1/gifs/search?q='+encodeURI( category )+'&limit=10&api_key=sU7qLpbr9VCYnq8rwWXBbogbUuYO3vED';\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n    //console.log( id, tittle, url );\r\n    return (\r\n        <div className = 'card animate__animated animate__fadeIn animate__delay-2s'>\r\n            <h5>{ title }</h5>\r\n            <img src = { url } alt = { title } />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem'\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    \r\n    const {data:images, loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className= \"animate__animated animate__zoomIn animate__delay-1s\"> { category } </h3>\r\n            { loading && <p>Cargando gifs...</p> }\r\n            <div className = 'card-grid'>\r\n                 \r\n                    {\r\n                        images.map(img => (\r\n                            <GifGridItem\r\n                                key = { img.id }\r\n                                { ...img }\r\n                            />\r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GifGrid\r\n","import React, { useState } from 'react'\r\nimport { useEffect } from 'react/cjs/react.development';\r\nimport { getGifts } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setstate] = useState({\r\n\r\n        data: [],\r\n        loading: true\r\n\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifts( category )\r\n            .then( imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            } )\r\n\r\n    }, [ category ])\r\n\r\n    return state; \r\n}\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\n\r\nconst GifExpertApp = () => {\r\n    /*Esta constante la uso unicamente si no va a cambiar nunca..\r\n    const categories =['One Punch man', 'Dragon Ball', 'Sailor Moon'];*/\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball'])\r\n   \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr></hr>\r\n            <AddCategory setCategories = { setCategories }/>\r\n            <ol>\r\n                {\r\n                    categories.map( category =>( \r\n                        <GifGrid \r\n                            key = { category }\r\n                            category = { category }\r\n                        />\r\n                    ))\r\n\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}